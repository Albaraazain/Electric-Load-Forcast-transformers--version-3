{
    "sourceFile": "others/convert_cumulitative_to_single_energy_consumption_per_time.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 3,
            "patches": [
                {
                    "date": 1733060881478,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733060886725,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,35 @@\n+import pandas as pd\r\n+\r\n+def convert_cumulative_to_interval(csv_file):\r\n+    # Read the CSV file\r\n+    df = pd.read_csv(csv_file, parse_dates=['utc_timestamp'])\r\n+    \r\n+    # Calculate the difference between consecutive readings\r\n+    # This gives us the actual consumption for each 15-min interval\r\n+    df['interval_consumption'] = df['DE_KN_residential1_grid_import'].diff()\r\n+    \r\n+    # Drop the first row since it will have NaN (no previous value to subtract)\r\n+    df = df.dropna()\r\n+    \r\n+    # Round to 3 decimal places for cleaner output\r\n+    df['interval_consumption'] = df['interval_consumption'].round(3)\r\n+    \r\n+    # Create new DataFrame with timestamp and interval consumption\r\n+    result_df = pd.DataFrame({\r\n+        'utc_timestamp': df['utc_timestamp'],\r\n+        'energy_consumption': df['interval_consumption']\r\n+    })\r\n+    \r\n+    # Save to new CSV file\r\n+    output_file = 'interval_consumption.csv'\r\n+    result_df.to_csv(output_file, index=False)\r\n+    print(f\"Converted data saved to {output_file}\")\r\n+    \r\n+    return result_df\r\n+\r\n+# Usage example\r\n+if __name__ == \"__main__\":\r\n+    # Replace 'your_input_file.csv' with your actual file name\r\n+    df = convert_cumulative_to_interval('your_input_file.csv')\r\n+    print(\"\\nFirst few rows of converted data:\")\r\n+    print(df.head())\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733060892203,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -31,40 +31,5 @@\n if __name__ == \"__main__\":\r\n     # Replace 'your_input_file.csv' with your actual file name\r\n     df = convert_cumulative_to_interval('your_input_file.csv')\r\n     print(\"\\nFirst few rows of converted data:\")\r\n-    print(df.head())\n-import pandas as pd\r\n-\r\n-def convert_cumulative_to_interval(csv_file):\r\n-    # Read the CSV file\r\n-    df = pd.read_csv(csv_file, parse_dates=['utc_timestamp'])\r\n-    \r\n-    # Calculate the difference between consecutive readings\r\n-    # This gives us the actual consumption for each 15-min interval\r\n-    df['interval_consumption'] = df['DE_KN_residential1_grid_import'].diff()\r\n-    \r\n-    # Drop the first row since it will have NaN (no previous value to subtract)\r\n-    df = df.dropna()\r\n-    \r\n-    # Round to 3 decimal places for cleaner output\r\n-    df['interval_consumption'] = df['interval_consumption'].round(3)\r\n-    \r\n-    # Create new DataFrame with timestamp and interval consumption\r\n-    result_df = pd.DataFrame({\r\n-        'utc_timestamp': df['utc_timestamp'],\r\n-        'energy_consumption': df['interval_consumption']\r\n-    })\r\n-    \r\n-    # Save to new CSV file\r\n-    output_file = 'interval_consumption.csv'\r\n-    result_df.to_csv(output_file, index=False)\r\n-    print(f\"Converted data saved to {output_file}\")\r\n-    \r\n-    return result_df\r\n-\r\n-# Usage example\r\n-if __name__ == \"__main__\":\r\n-    # Replace 'your_input_file.csv' with your actual file name\r\n-    df = convert_cumulative_to_interval('your_input_file.csv')\r\n-    print(\"\\nFirst few rows of converted data:\")\r\n     print(df.head())\n\\ No newline at end of file\n"
                },
                {
                    "date": 1733060941624,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,16 +20,16 @@\n         'energy_consumption': df['interval_consumption']\r\n     })\r\n     \r\n     # Save to new CSV file\r\n-    output_file = 'interval_consumption.csv'\r\n+    output_file = 'data/interval_consumption.csv'\r\n     result_df.to_csv(output_file, index=False)\r\n     print(f\"Converted data saved to {output_file}\")\r\n     \r\n     return result_df\r\n \r\n # Usage example\r\n if __name__ == \"__main__\":\r\n     # Replace 'your_input_file.csv' with your actual file name\r\n-    df = convert_cumulative_to_interval('your_input_file.csv')\r\n+    df = convert_cumulative_to_interval('data/household_15min.csv')\r\n     print(\"\\nFirst few rows of converted data:\")\r\n     print(df.head())\n\\ No newline at end of file\n"
                }
            ],
            "date": 1733060881478,
            "name": "Commit-0",
            "content": "import pandas as pd\r\n\r\ndef convert_cumulative_to_interval(csv_file):\r\n    # Read the CSV file\r\n    df = pd.read_csv(csv_file, parse_dates=['utc_timestamp'])\r\n    \r\n    # Calculate the difference between consecutive readings\r\n    # This gives us the actual consumption for each 15-min interval\r\n    df['interval_consumption'] = df['DE_KN_residential1_grid_import'].diff()\r\n    \r\n    # Drop the first row since it will have NaN (no previous value to subtract)\r\n    df = df.dropna()\r\n    \r\n    # Round to 3 decimal places for cleaner output\r\n    df['interval_consumption'] = df['interval_consumption'].round(3)\r\n    \r\n    # Create new DataFrame with timestamp and interval consumption\r\n    result_df = pd.DataFrame({\r\n        'utc_timestamp': df['utc_timestamp'],\r\n        'energy_consumption': df['interval_consumption']\r\n    })\r\n    \r\n    # Save to new CSV file\r\n    output_file = 'interval_consumption.csv'\r\n    result_df.to_csv(output_file, index=False)\r\n    print(f\"Converted data saved to {output_file}\")\r\n    \r\n    return result_df\r\n\r\n# Usage example\r\nif __name__ == \"__main__\":\r\n    # Replace 'your_input_file.csv' with your actual file name\r\n    df = convert_cumulative_to_interval('your_input_file.csv')\r\n    print(\"\\nFirst few rows of converted data:\")\r\n    print(df.head())"
        }
    ]
}