{
    "sourceFile": "utils/logging/formatters.py",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1733246296200,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1733246495189,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,10 @@\n             \"message\": record.getMessage(),\r\n             \"component\": getattr(record, \"component\", \"unknown\")\r\n         }\r\n         \r\n-        if hasattr(record, \"extra_data\"):\r\n-            log_data.update(record.extra_data)\r\n+        # Properly handle extra data if it exists in record.__dict__\r\n+        if \"extra_data\" in getattr(record, \"__dict__\", {}):\r\n+            log_data.update(record.__dict__[\"extra_data\"] or {})\r\n             \r\n         return json.dumps(log_data)\r\n \r\n"
                }
            ],
            "date": 1733246296199,
            "name": "Commit-0",
            "content": "# utils/logging/formatters.py\r\nimport json\r\nimport logging\r\nfrom datetime import datetime\r\n\r\nclass JSONFormatter(logging.Formatter):\r\n    \"\"\"JSON formatter for structured logging.\"\"\"\r\n    \r\n    def format(self, record: logging.LogRecord) -> str:\r\n        \"\"\"Format log record as JSON.\"\"\"\r\n        log_data = {\r\n            \"timestamp\": datetime.fromtimestamp(record.created).isoformat(),\r\n            \"level\": record.levelname,\r\n            \"module\": record.module,\r\n            \"message\": record.getMessage(),\r\n            \"component\": getattr(record, \"component\", \"unknown\")\r\n        }\r\n        \r\n        if hasattr(record, \"extra_data\"):\r\n            log_data.update(record.extra_data)\r\n            \r\n        return json.dumps(log_data)\r\n\r\n"
        }
    ]
}